// Generated by gencpp from file campusrover_msgs/LocalizerLauncher.msg
// DO NOT EDIT!


#ifndef CAMPUSROVER_MSGS_MESSAGE_LOCALIZERLAUNCHER_H
#define CAMPUSROVER_MSGS_MESSAGE_LOCALIZERLAUNCHER_H

#include <ros/service_traits.h>


#include <campusrover_msgs/LocalizerLauncherRequest.h>
#include <campusrover_msgs/LocalizerLauncherResponse.h>


namespace campusrover_msgs
{

struct LocalizerLauncher
{

typedef LocalizerLauncherRequest Request;
typedef LocalizerLauncherResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct LocalizerLauncher
} // namespace campusrover_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::campusrover_msgs::LocalizerLauncher > {
  static const char* value()
  {
    return "8eb55704262cb8d370c8eac127c46d76";
  }

  static const char* value(const ::campusrover_msgs::LocalizerLauncher&) { return value(); }
};

template<>
struct DataType< ::campusrover_msgs::LocalizerLauncher > {
  static const char* value()
  {
    return "campusrover_msgs/LocalizerLauncher";
  }

  static const char* value(const ::campusrover_msgs::LocalizerLauncher&) { return value(); }
};


// service_traits::MD5Sum< ::campusrover_msgs::LocalizerLauncherRequest> should match
// service_traits::MD5Sum< ::campusrover_msgs::LocalizerLauncher >
template<>
struct MD5Sum< ::campusrover_msgs::LocalizerLauncherRequest>
{
  static const char* value()
  {
    return MD5Sum< ::campusrover_msgs::LocalizerLauncher >::value();
  }
  static const char* value(const ::campusrover_msgs::LocalizerLauncherRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::campusrover_msgs::LocalizerLauncherRequest> should match
// service_traits::DataType< ::campusrover_msgs::LocalizerLauncher >
template<>
struct DataType< ::campusrover_msgs::LocalizerLauncherRequest>
{
  static const char* value()
  {
    return DataType< ::campusrover_msgs::LocalizerLauncher >::value();
  }
  static const char* value(const ::campusrover_msgs::LocalizerLauncherRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::campusrover_msgs::LocalizerLauncherResponse> should match
// service_traits::MD5Sum< ::campusrover_msgs::LocalizerLauncher >
template<>
struct MD5Sum< ::campusrover_msgs::LocalizerLauncherResponse>
{
  static const char* value()
  {
    return MD5Sum< ::campusrover_msgs::LocalizerLauncher >::value();
  }
  static const char* value(const ::campusrover_msgs::LocalizerLauncherResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::campusrover_msgs::LocalizerLauncherResponse> should match
// service_traits::DataType< ::campusrover_msgs::LocalizerLauncher >
template<>
struct DataType< ::campusrover_msgs::LocalizerLauncherResponse>
{
  static const char* value()
  {
    return DataType< ::campusrover_msgs::LocalizerLauncher >::value();
  }
  static const char* value(const ::campusrover_msgs::LocalizerLauncherResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CAMPUSROVER_MSGS_MESSAGE_LOCALIZERLAUNCHER_H
